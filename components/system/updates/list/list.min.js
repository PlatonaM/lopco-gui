
export{List}
class List{static type_map={'worker':'/workers','protocol-adapter':'/protocol-adapters/registry'}
constructor(ctr){this.container=ctr;}
draw(){fetch(active_cmp.constructor.api).then((response)=>{if(response.ok){return response.json()}
if(response.status===503){throw'Currently checking for updates, please try again later.'}
throw'Error retrieving available updates - '+response.status;}).then((data)=>{fetch('/components/system/updates/list/template.html').then((response)=>response.text()).then((template)=>{let items=[];for(let[key,value]of Object.entries(data)){let entities=[];if(value['entities']){for(let id of value['entities']){entities.push({e_id:id,e_api:List.type_map[value['type']],})}}
if(value['type']==='core'){entities.push({e_id:'LOPCO',e_api:null})}
items.push({image:key,type:value['type'],entities:entities,time:value['time']})}
this.container.innerHTML=Mustache.render(template,{items:items});});}).catch((err)=>{this.container.innerHTML=err});}
refresh(){showSpinner();fetch(active_cmp.constructor.api+'?refresh=true').then((response)=>{if(response.ok){window.open('/system/updates','_self');}else{throw response.status;}}).catch((err)=>{hideSpinner();alert('Error refreshing available updates - '+err);})}
update(img){showSpinner();fetch(active_cmp.constructor.api+'/'+encodeURIComponent(encodeURIComponent(img)),{method:'PATCH',headers:{'Content-Type':'application/json'}}).then((response)=>{if(response.ok){window.open('/system/updates','_self');}else{throw response.status;}}).catch((err)=>{hideSpinner();alert('Error updating "'+img+'" - '+err);})}}